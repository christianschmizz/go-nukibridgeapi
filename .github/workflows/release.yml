name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.31

      - name: Test
        run: make test

      - name: Build
        run: build-cross-static

      - name: Compress
        run: |
          zip --junk-paths nukibridgectl-${{ github.ref }}-darwin nukibridgectl-darwin-amd64-static
          zip --junk-paths nukibridgectl-${{ github.ref }}-linux nukibridgectl-linux-amd64-static
          zip --junk-paths nukibridgectl-${{ github.ref }}-windows nukibridgectl-windows-amd64-static

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Darwin
        id: upload_darwin_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nukibridgectl-${{ github.ref }}-darwin.zip
          asset_name: nukibridgectl-${{ github.ref }}-darwin.zip
          asset_content_type: application/zip

      - name: Upload Linux
        id: upload_linux_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nukibridgectl-${{ github.ref }}-linux.zip
          asset_name: nukibridgectl-${{ github.ref }}-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows
        id: upload_windows_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./nukibridgectl-${{ github.ref }}-windows.zip
          asset_name: nukibridgectl-${{ github.ref }}-windows.zip
          asset_content_type: application/zip
